<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.abc.ssm.modules.sys.dao.FunctionDao">

    <resultMap id="sysFunctionBean" type="function">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="code" property="code"/>
        <result column="parentId" property="parentId"/>
        <result column="url" property="url"/>
        <result column="icon" property="icon"/>
        <result column="enable" property="enable"/>
        <result column="type" property="type"/>
        <result column="index" property="index"/>
        <result column="remarks" property="remarks"/>
        <result column="createUserId" property="createUserId"/>
        <result column="modifyUserId" property="modifyUserId"/>
        <result column="createDate" property="createDate"/>
        <result column="modifyDate" property="modifyDate"/>
        <result column="delFlag" property="delFlag"/>
    </resultMap>

    <select id="selectByUsername" parameterType="string" resultType="Function">
        select a.*
        from sys_entity_user b
                 left join sys_map_user_role c on c.userId = b.id
                 left join sys_map_role_function d on d.roleId = c.roleId
                 left join sys_entity_function a on a.id = d.functionId
        where b.username = #{0}
          and a.enable = true
        group by a.id -- 避免重复获取同一功能
    </select>

    <select id="selectAll" resultType="Function">
        select a.*
        from sys_entity_function a
    </select>

    <select id="selectAllEnabled" resultType="Function">
        select a.*
        from sys_entity_function a
        where a.enable = true
    </select>

    <select id="selectByRole" resultMap="sysFunctionBean" parameterType="Role">
        select a.*
        from sys_entity_function a
                 left join sys_map_role_function b on b.functionId = a.id
                 left join sys_entity_role c on c.id = b.roleId
        where c.id = #{id}
        group by a.id
    </select>

    <insert id="insert" parameterType="Function">
        insert into sys_entity_function (name,
                                         code,
                                         parentId,
                                         url,
                                         icon,
                                         enable,
                                         type,
                                         `index`,
                                         id,
                                         remarks,
                                         createUserId,
                                         modifyUserId,
                                         createDate,
                                         modifyDate,
                                         delFlag
        )
        values (#{name},
                #{code},
                #{parentId},
                #{url},
                #{icon},
                #{enable},
                #{type},
                #{index},
                #{id},
                #{remarks},
                #{createUserId},
                #{modifyUserId},
                #{createDate},
                #{modifyDate},
                #{delFlag})
    </insert>

    <delete id="deleteById" parameterType="Function">
        delete
        from sys_entity_function
        where id = #{id}
    </delete>

    <update id="updateIndex" parameterType="function">
        update sys_entity_function set `index` =
        case id
        <foreach collection="list" item="item">
            when #{item.id} then #{item.index}
        </foreach>
        end
        where id in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </update>

    <update id="update" parameterType="Function">
        update sys_entity_function
        set name         = #{name},
            code         = #{code},
            parentId     = #{parentId},
            url          = #{url},
            icon         = #{icon},
            enable       = #{enable},
            type         = #{type},
            `index`      = #{index},
            id           = #{id},
            remarks      = #{remarks},
            createUserId = #{createUserId},
            modifyUserId = #{modifyUserId},
            createDate   = #{createDate},
            modifyDate   = #{modifyDate},
            delFlag      = #{delFlag}
        where id = #{id}
    </update>
</mapper>